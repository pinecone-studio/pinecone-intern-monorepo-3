'use client';

import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import PaymentSelection from '@/components/payment/PaymentSelection';

type PendingOrderData = {
  cartItems: any[];
  baseOrderAmount: number;
  selectedOrderType: 'IN' | 'GO';
  tableQr: string;
};

const OrderPaymentPage = () => {
  const router = useRouter();
  const [orderData, setOrderData] = useState<PendingOrderData | null>(null);
  const [loading, setLoading] = useState(true);

  // üåü –®–∏–Ω—ç—ç—Ä –Ω—ç–º—Å—ç–Ω state
  const [hasMounted, setHasMounted] = useState(false);

  useEffect(() => {
    // üåü Component DOM –¥—ç—ç—Ä –∞—á–∞–∞–ª–∞–≥–¥—Å–∞–Ω –≥—ç–¥–≥–∏–π–≥ —Ç—ç–º–¥—ç–≥–ª—ç–Ω—ç
    setHasMounted(true);

    const dataString = localStorage.getItem('pendingOrder');

    if (dataString) {
      try {
        const data: PendingOrderData = JSON.parse(dataString);
        setOrderData(data);
      } catch (e) {
        console.error('Local Storage-–∏–π–Ω ”©–≥”©–≥–¥”©–ª –±—É—Ä—É—É –±–∞–π–Ω–∞:', e);
        router.back();
      }
    } else {
      router.back();
    }
    setLoading(false);
  }, [router]);

  // ... (handleSubmit —Ñ—É–Ω–∫—Ü —Ö—ç–≤—ç—ç—Ä)
  const handleSubmit = (finalAmount: number, paymentMethod: string) => {
    if (!orderData) return;

    const newOrder = {
      orderId: Date.now().toString(),
      orderNumber: Math.floor(Math.random() * 10000),
      tableQr: orderData.tableQr,
      items: orderData.cartItems,
      totalPrice: finalAmount,
      paymentMethod: paymentMethod,
      orderType: orderData.selectedOrderType,
      status: '–ë–æ–ª–æ–≤—Å—Ä—É—É–ª–∂ –±–∞–π–Ω–∞',
      createdAt: new Date().toISOString(),
    };

    const orders = JSON.parse(localStorage.getItem('orders') || '[]');
    localStorage.setItem('orders', JSON.stringify([...orders, newOrder]));

    localStorage.removeItem('pendingOrder');

    // alert(`–ó–∞—Ö–∏–∞–ª–≥–∞ –∞–º–∂–∏–ª—Ç—Ç–∞–π –∏–ª–≥—ç—ç–≥–¥—ç–∂, ${finalAmount.toLocaleString()}‚ÇÆ —Ç”©–ª”©–≥–¥–ª”©”©!`);

    router.push('/success');
  };

  // üåü hasMounted —à–∞–ª–≥–∞—Ö
  if (!hasMounted || loading || !orderData) {
    // –•—ç—Ä—ç–≤ —à—É—É–¥ —à–∏–ª–∂–∏–ª—Ç —Ö–∏–π–≥–¥—Å—ç–Ω –±–æ–ª, —ç–Ω—ç —Ö—ç—Å—ç–≥ —Ç“Ø—Ä —Ö—É–≥–∞—Ü–∞–∞–Ω–¥ –≥–∞—Ä—á, DOM-–∏–π–≥ –∑”©–≤ –±–∞–π—Ä—à—É—É–ª–∞—Ö —Ö—É–≥–∞—Ü–∞–∞ –æ–ª–≥–æ–Ω–æ.
    return <div className="flex items-center justify-center max-w-sm min-h-screen mx-auto">–ú—ç–¥—ç—ç–ª—ç–ª –∞—á–∞–∞–ª–∂ –±–∞–π–Ω–∞...</div>;
  }

  return (
    <div className="max-w-sm min-h-screen mx-auto">
      {/* hasMounted “Ø–Ω—ç–Ω –±–æ–ª PaymentSelection-–∏–π–≥ —Ä–µ–Ω–¥—ç—Ä–ª—ç–Ω—ç */}
      <PaymentSelection baseOrderAmount={orderData.baseOrderAmount} onClose={() => router.back()} onSubmit={handleSubmit} selectedOrderType={orderData.selectedOrderType} />
    </div>
  );
};

export default OrderPaymentPage;
